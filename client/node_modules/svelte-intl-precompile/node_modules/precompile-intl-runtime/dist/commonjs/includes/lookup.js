"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lookup = exports.lookupCache = void 0;
const dictionary_js_1 = require("../stores/dictionary.js");
const utils_js_1 = require("./utils.js");
exports.lookupCache = {};
const addToCache = (path, locale, message) => {
    if (!message)
        return message;
    if (!(locale in exports.lookupCache))
        exports.lookupCache[locale] = {};
    if (!(path in exports.lookupCache[locale]))
        exports.lookupCache[locale][path] = message;
    return message;
};
const lookup = (path, refLocale) => {
    if (refLocale == null)
        return undefined;
    if (refLocale in exports.lookupCache && path in exports.lookupCache[refLocale]) {
        return exports.lookupCache[refLocale][path];
    }
    const locales = (0, utils_js_1.getPossibleLocales)(refLocale);
    for (let i = 0; i < locales.length; i++) {
        const locale = locales[i];
        const message = (0, dictionary_js_1.getMessageFromDictionary)(locale, path);
        if (message) {
            // Used the requested locale as the cache key
            // Ex: { en: { title: "Title" }}
            // lookup('title', 'en-GB') should cache with 'en-GB' instead of 'en'
            return addToCache(path, refLocale, message);
        }
    }
    return undefined;
};
exports.lookup = lookup;
