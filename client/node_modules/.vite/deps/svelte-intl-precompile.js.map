{
  "version": 3,
  "sources": ["../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/includes/utils.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/stores/dictionary.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/stores/loading.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/includes/loaderQueue.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/includes/localeGetters.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/stores/locale.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/configs.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/includes/lookup.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/includes/memoize.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/includes/formatters.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/stores/formatters.js", "../../svelte-intl-precompile/node_modules/precompile-intl-runtime/dist/modules/index.js"],
  "sourcesContent": ["export const defaultFormats = {\n    number: {\n        scientific: { notation: 'scientific' },\n        engineering: { notation: 'engineering' },\n        compactLong: { notation: 'compact', compactDisplay: 'long' },\n        compactShort: { notation: 'compact', compactDisplay: 'short' },\n    },\n    date: {\n        short: { month: 'numeric', day: 'numeric', year: '2-digit' },\n        medium: { month: 'short', day: 'numeric', year: 'numeric' },\n        long: { month: 'long', day: 'numeric', year: 'numeric' },\n        full: { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric' },\n    },\n    time: {\n        short: { hour: 'numeric', minute: 'numeric' },\n        medium: { hour: 'numeric', minute: 'numeric', second: 'numeric' },\n        long: {\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            timeZoneName: 'short',\n        },\n        full: {\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            timeZoneName: 'short',\n        },\n    },\n};\nconst defaultOptions = {\n    fallbackLocale: '',\n    initialLocale: '',\n    loadingDelay: 200,\n    formats: defaultFormats,\n    warnOnMissingMessages: true,\n};\nconst options = defaultOptions;\nlet currentLocale;\nexport function getCurrentLocale() {\n    return currentLocale;\n}\nexport function setCurrentLocale(val) {\n    return currentLocale = val;\n}\nexport function getOptions() {\n    return options;\n}\nfunction getSubLocales(refLocale) {\n    return refLocale\n        .split('-')\n        .map((_, i, arr) => arr.slice(0, i + 1).join('-'))\n        .reverse();\n}\nexport function getPossibleLocales(refLocale, fallbackLocale = getOptions().fallbackLocale) {\n    const locales = getSubLocales(refLocale);\n    if (fallbackLocale) {\n        return [...new Set([...locales, ...getSubLocales(fallbackLocale)])];\n    }\n    return locales;\n}\n", "// @ts-ignore\nimport { writable, derived } from 'svelte/store';\nimport { getPossibleLocales } from '../includes/utils.js';\nlet dictionary;\nconst $dictionary = writable({});\nexport function getLocaleDictionary(locale) {\n    return dictionary[locale] || null;\n}\nexport function getDictionary() {\n    return dictionary;\n}\nexport function hasLocaleDictionary(locale) {\n    return locale in dictionary;\n}\nexport function getMessageFromDictionary(locale, id) {\n    if (hasLocaleDictionary(locale)) {\n        const localeDictionary = getLocaleDictionary(locale);\n        if (id in localeDictionary) {\n            return localeDictionary[id];\n        }\n        const ids = id.split('.');\n        let tmpDict = localeDictionary;\n        for (let i = 0; i < ids.length; i++) {\n            if (typeof tmpDict[ids[i]] !== 'object') {\n                return tmpDict[ids[i]] || null;\n            }\n            tmpDict = tmpDict[ids[i]];\n        }\n        return tmpDict;\n    }\n    return null;\n}\nexport function getClosestAvailableLocale(refLocale) {\n    if (refLocale == null)\n        return null;\n    const relatedLocales = getPossibleLocales(refLocale);\n    for (let i = 0; i < relatedLocales.length; i++) {\n        const locale = relatedLocales[i];\n        if (hasLocaleDictionary(locale)) {\n            return locale;\n        }\n    }\n    return null;\n}\nexport function addMessages(locale, ...partials) {\n    $dictionary.update(d => {\n        d[locale] = Object.assign(d[locale] || {}, ...partials);\n        return d;\n    });\n}\nconst $locales = /*@__PURE__*/ derived([$dictionary], ([$dictionary]) => Object.keys($dictionary));\n$dictionary.subscribe(newDictionary => (dictionary = newDictionary));\nexport { $dictionary, $locales };\n", "// @ts-ignore\nimport { writable } from \"svelte/store\";\nexport const $isLoading = writable(false);\n", "import { hasLocaleDictionary, $dictionary, addMessages, } from '../stores/dictionary.js';\nimport { getPossibleLocales, getOptions } from '../includes/utils.js';\nimport { $isLoading } from '../stores/loading.js';\nconst loaderQueue = {};\nexport function resetQueues() {\n    Object.keys(loaderQueue).forEach(key => {\n        delete loaderQueue[key];\n    });\n}\nfunction createLocaleQueue(locale) {\n    loaderQueue[locale] = new Set();\n}\nfunction removeLocaleFromQueue(locale) {\n    delete loaderQueue[locale];\n}\nfunction getLocaleQueue(locale) {\n    return loaderQueue[locale];\n}\nfunction getLocalesQueues(locale) {\n    return getPossibleLocales(locale)\n        .reverse()\n        .map(localeItem => {\n        const queue = getLocaleQueue(localeItem);\n        return [localeItem, queue ? [...queue] : []];\n    })\n        .filter(([, queue]) => queue.length > 0);\n}\nexport function hasLocaleQueue(locale) {\n    return getPossibleLocales(locale)\n        .reverse()\n        .some(getLocaleQueue);\n}\nconst activeLocaleFlushes = {};\nexport function flush(locale) {\n    if (!hasLocaleQueue(locale))\n        return Promise.resolve();\n    if (locale in activeLocaleFlushes)\n        return activeLocaleFlushes[locale];\n    // get queue of XX-YY and XX locales\n    const queues = getLocalesQueues(locale);\n    // istanbul ignore if\n    if (queues.length === 0)\n        return Promise.resolve();\n    const loadingDelay = setTimeout(() => $isLoading.set(true), getOptions().loadingDelay);\n    // TODO what happens if some loader fails\n    activeLocaleFlushes[locale] = Promise.all(queues.map(([locale, queue]) => {\n        return Promise.all(queue.map(loader => loader())).then(partials => {\n            removeLocaleFromQueue(locale);\n            partials = partials.map(partial => partial.default || partial);\n            addMessages(locale, ...partials);\n        });\n    })).then(() => {\n        clearTimeout(loadingDelay);\n        $isLoading.set(false);\n        delete activeLocaleFlushes[locale];\n    });\n    return activeLocaleFlushes[locale];\n}\nexport function registerLocaleLoader(locale, loader) {\n    if (!getLocaleQueue(locale))\n        createLocaleQueue(locale);\n    const queue = getLocaleQueue(locale);\n    // istanbul ignore if\n    if (getLocaleQueue(locale).has(loader))\n        return;\n    if (!hasLocaleDictionary(locale)) {\n        $dictionary.update(d => {\n            d[locale] = {};\n            return d;\n        });\n    }\n    queue.add(loader);\n}\n", "const getFromQueryString = (queryString, key) => {\n    const keyVal = queryString.split('&').find((i) => i.indexOf(`${key}=`) === 0);\n    if (keyVal) {\n        return keyVal.split('=').pop() || null;\n    }\n    return null;\n};\nconst getFirstMatch = (base, pattern) => {\n    const match = pattern.exec(base);\n    // istanbul ignore if\n    if (!match)\n        return null;\n    // istanbul ignore else\n    return match[1] || null;\n};\nexport const getLocaleFromHostname = (hostname) => {\n    // istanbul ignore next\n    if (typeof window === 'undefined')\n        return null;\n    return getFirstMatch(window.location.hostname, hostname);\n};\nexport const getLocaleFromPathname = (pathname) => {\n    // istanbul ignore next\n    if (typeof window === 'undefined')\n        return null;\n    return getFirstMatch(window.location.pathname, pathname);\n};\nexport const getLocaleFromNavigator = (ssrDefault) => {\n    // istanbul ignore next\n    if (typeof window === 'undefined') {\n        return ssrDefault || null;\n    }\n    return window.navigator.language || window.navigator.languages[0];\n};\nexport const getLocaleFromQueryString = (search) => {\n    // istanbul ignore next\n    if (typeof window === 'undefined')\n        return null;\n    return getFromQueryString(window.location.search.substr(1), search);\n};\nexport const getLocaleFromHash = (hash) => {\n    // istanbul ignore next\n    if (typeof window === 'undefined')\n        return null;\n    return getFromQueryString(window.location.hash.substr(1), hash);\n};\nexport const getLocaleFromAcceptLanguageHeader = (header, availableLocales) => {\n    // If header is null (i.e. does not exist) the fallbackLocale should be used\n    if (!header)\n        return undefined;\n    // Parse Accept-Language header\n    const locales = header\n        .split(',')\n        .map(locale => locale.trim())\n        .map(locale => {\n        const directives = locale.split(';q=');\n        return {\n            locale: directives[0],\n            quality: parseFloat(directives[1]) || 1.0\n        };\n    })\n        .sort((a, b) => b.quality - a.quality);\n    // If availableLocales is not defined return the first language from header\n    if (!availableLocales || availableLocales.length === 0)\n        return locales[0].locale;\n    locales.forEach(l => l.locale = l.locale.toLowerCase());\n    let firstAvailableBaseMatch;\n    // Check languages\n    for (const locale of locales) {\n        if (firstAvailableBaseMatch && !locale.locale.toLowerCase().startsWith(`${firstAvailableBaseMatch.base}-`)) {\n            continue;\n        }\n        // Full match\n        const fullMatch = getArrayElementCaseInsensitive(availableLocales, locale.locale);\n        if (fullMatch) {\n            return fullMatch;\n        }\n        if (firstAvailableBaseMatch) {\n            continue;\n        }\n        // header base match\n        const baseMatch = getArrayElementCaseInsensitive(availableLocales, locale.locale.split('-')[0]);\n        if (baseMatch) {\n            return baseMatch;\n        }\n        // available base match\n        for (const availableLocale of availableLocales) {\n            const availableBase = availableLocale.split('-')[0];\n            if (availableBase.toLowerCase() === locale.locale) {\n                // Remember base match to check if full match with same base exists\n                firstAvailableBaseMatch = {\n                    match: availableLocale,\n                    base: locale.locale\n                };\n                break;\n            }\n        }\n    }\n    if (firstAvailableBaseMatch !== undefined) {\n        return firstAvailableBaseMatch.match;\n    }\n    // If no match found use fallbackLocale\n    return undefined;\n};\nfunction getArrayElementCaseInsensitive(array, searchElement) {\n    searchElement = searchElement.toLowerCase();\n    for (const element of array) {\n        if (element.toLowerCase() === searchElement) {\n            return element;\n        }\n    }\n    return undefined;\n}\n", "import { writable } from 'svelte/store';\nimport { flush, hasLocaleQueue } from '../includes/loaderQueue.js';\nimport { getCurrentLocale, setCurrentLocale } from '../includes/utils.js';\nimport { getClosestAvailableLocale } from './dictionary.js';\nconst $locale = writable('');\n$locale.subscribe((newLocale) => {\n    setCurrentLocale(newLocale);\n    if (typeof window !== 'undefined') {\n        if (newLocale !== '') {\n            document.documentElement.setAttribute('lang', newLocale);\n        }\n    }\n});\nconst localeSet = $locale.set;\n$locale.set = (newLocale) => {\n    if (getClosestAvailableLocale(newLocale) && hasLocaleQueue(newLocale)) {\n        return flush(newLocale).then(() => localeSet(newLocale));\n    }\n    return localeSet(newLocale);\n};\n// istanbul ignore next\n$locale.update = (fn) => {\n    let currentLocale = getCurrentLocale();\n    fn(currentLocale);\n    localeSet(currentLocale);\n};\nexport { $locale };\n", "import { $locale } from './stores/locale.js';\nimport { getOptions } from './includes/utils.js';\nexport function init(opts) {\n    const { formats, ...rest } = opts;\n    const initialLocale = opts.initialLocale || opts.fallbackLocale;\n    const options = getOptions();\n    Object.assign(options, rest, { initialLocale });\n    if (formats) {\n        if ('number' in formats) {\n            Object.assign(options.formats.number, formats.number);\n        }\n        if ('date' in formats) {\n            Object.assign(options.formats.date, formats.date);\n        }\n        if ('time' in formats) {\n            Object.assign(options.formats.time, formats.time);\n        }\n    }\n    return $locale.set(initialLocale);\n}\n", "import { getMessageFromDictionary } from '../stores/dictionary.js';\nimport { getPossibleLocales } from './utils.js';\nexport const lookupCache = {};\nconst addToCache = (path, locale, message) => {\n    if (!message)\n        return message;\n    if (!(locale in lookupCache))\n        lookupCache[locale] = {};\n    if (!(path in lookupCache[locale]))\n        lookupCache[locale][path] = message;\n    return message;\n};\nexport const lookup = (path, refLocale) => {\n    if (refLocale == null)\n        return undefined;\n    if (refLocale in lookupCache && path in lookupCache[refLocale]) {\n        return lookupCache[refLocale][path];\n    }\n    const locales = getPossibleLocales(refLocale);\n    for (let i = 0; i < locales.length; i++) {\n        const locale = locales[i];\n        const message = getMessageFromDictionary(locale, path);\n        if (message) {\n            // Used the requested locale as the cache key\n            // Ex: { en: { title: \"Title\" }}\n            // lookup('title', 'en-GB') should cache with 'en-GB' instead of 'en'\n            return addToCache(path, refLocale, message);\n        }\n    }\n    return undefined;\n};\n", "const monadicMemoize = fn => {\n    const cache = Object.create(null);\n    const memoizedFn = (arg) => {\n        const cacheKey = JSON.stringify(arg);\n        if (!(cacheKey in cache)) {\n            cache[cacheKey] = fn(arg);\n        }\n        return cache[cacheKey];\n    };\n    return memoizedFn;\n};\nexport { monadicMemoize };\n", "import { getOptions, getCurrentLocale } from './utils.js';\nimport { monadicMemoize } from './memoize.js';\nconst getIntlFormatterOptions = (type, name) => {\n    const { formats } = getOptions();\n    if (type in formats && name in formats[type]) {\n        return formats[type][name];\n    }\n    throw new Error(`[precompile-intl-runtime] Unknown \"${name}\" ${type} format.`);\n};\nexport const getNumberFormatter = monadicMemoize(({ locale, format, ...options } = {}) => {\n    locale = locale || getCurrentLocale();\n    if (locale == null) {\n        throw new Error('[precompile-intl-runtime] A \"locale\" must be set to format numbers');\n    }\n    if (typeof format === 'string') {\n        return new Intl.NumberFormat(locale, getIntlFormatterOptions('number', format));\n    }\n    else {\n        return new Intl.NumberFormat(locale, options);\n    }\n});\nexport const getDateFormatter = monadicMemoize(({ locale, format, ...options } = {}) => {\n    locale = locale || getCurrentLocale();\n    if (locale == null) {\n        throw new Error('[precompile-intl-runtime] A \"locale\" must be set to format dates');\n    }\n    if (format) {\n        options = getIntlFormatterOptions('date', format);\n    }\n    else if (Object.keys(options).length === 0) {\n        options = getIntlFormatterOptions('date', 'short');\n    }\n    return new Intl.DateTimeFormat(locale, options);\n});\nexport const getTimeFormatter = monadicMemoize(({ locale, format, ...options } = {}) => {\n    locale = locale || getCurrentLocale();\n    if (locale == null) {\n        throw new Error('[precompile-intl-runtime] A \"locale\" must be set to format time values');\n    }\n    if (format) {\n        options = getIntlFormatterOptions('time', format);\n    }\n    else if (Object.keys(options).length === 0) {\n        options = getIntlFormatterOptions('time', 'short');\n    }\n    return new Intl.DateTimeFormat(locale, options);\n});\n", "import { derived } from \"svelte/store\";\nimport { lookup } from '../includes/lookup.js';\nimport { hasLocaleQueue } from '../includes/loaderQueue.js';\nimport { getTimeFormatter, getDateFormatter, getNumberFormatter, } from '../includes/formatters.js';\nimport { getOptions, getCurrentLocale, getPossibleLocales } from '../includes/utils.js';\nimport { $dictionary } from './dictionary.js';\nimport { $locale } from './locale.js';\nexport const formatMessage = (currentLocale, optionsOrId, maybeOptions = {}) => {\n    const id = typeof optionsOrId === 'string' ? optionsOrId : optionsOrId.id;\n    const options = typeof optionsOrId === 'string' ? maybeOptions : optionsOrId;\n    const { values, locale = currentLocale || getCurrentLocale(), default: defaultValue, } = options;\n    if (locale == null) {\n        throw new Error('[svelte-intl-precompile] Cannot format a message without first setting the initial locale.');\n    }\n    let message = lookup(id, locale);\n    if (typeof message === 'string') {\n        return message;\n    }\n    if (typeof message === 'function') {\n        return message(...Object.keys(options.values || {}).sort().map(k => (options.values || {})[k]));\n    }\n    if (getOptions().warnOnMissingMessages) {\n        // istanbul ignore next\n        console.warn(`[svelte-intl-precompile] The message \"${id}\" was not found in \"${getPossibleLocales(locale).join('\", \"')}\".${hasLocaleQueue(getCurrentLocale())\n            ? `\\n\\nNote: there are at least one loader still registered to this locale that wasn't executed.`\n            : ''}`);\n    }\n    return defaultValue || id;\n};\nexport const getJSON = (id, locale) => {\n    locale = locale || getCurrentLocale();\n    return lookup(id, locale) || id;\n};\nexport const formatTime = (currentLocale, t, options) => {\n    const locale = currentLocale || getCurrentLocale();\n    return getTimeFormatter({ locale, ...options }).format(t);\n};\nexport const formatDate = (currentLocale, d, options) => {\n    const locale = currentLocale || getCurrentLocale();\n    return getDateFormatter({ locale, ...options }).format(d);\n};\nexport const formatNumber = (currentLocale, n, options) => {\n    const locale = currentLocale || getCurrentLocale();\n    return getNumberFormatter({ locale, ...options }).format(n);\n};\nexport const $format = /*@__PURE__*/ derived([$locale, $dictionary], ([currentLocale]) => formatMessage.bind(null, currentLocale));\nexport const $formatTime = /*@__PURE__*/ derived([$locale], ([currentLocale]) => formatTime.bind(null, currentLocale));\nexport const $formatDate = /*@__PURE__*/ derived([$locale], ([currentLocale]) => formatDate.bind(null, currentLocale));\nexport const $formatNumber = /*@__PURE__*/ derived([$locale], ([currentLocale]) => formatNumber.bind(null, currentLocale));\nexport const $getJSON = /*@__PURE__*/ derived([$locale, $dictionary], () => getJSON);\n", "import { flush } from './includes/loaderQueue.js';\nimport { getOptions, getCurrentLocale } from './includes/utils.js';\nexport * from './includes/localeGetters.js';\nexport * from './includes/utils.js';\nexport function waitLocale(locale) {\n    return flush(locale || getCurrentLocale() || getOptions().initialLocale);\n}\nexport { init } from './configs.js';\nexport { $locale as locale } from './stores/locale.js';\nexport { $dictionary as dictionary, $locales as locales, addMessages, } from './stores/dictionary.js';\nexport { registerLocaleLoader as register } from './includes/loaderQueue.js';\nexport { $isLoading as isLoading } from './stores/loading.js';\nimport { formatTime, formatDate, formatNumber } from './stores/formatters.js';\nexport { formatMessage, $format as format, $format as _, $format as t, $formatDate as date, $formatNumber as number, $formatTime as time, $getJSON as json, } from './stores/formatters.js';\n// low-level\nexport { getDateFormatter, getNumberFormatter, getTimeFormatter, } from './includes/formatters.js';\nexport function __interpolate(value) {\n    return value === 0 ? 0 : value || '';\n}\nconst PLURAL_RULES = Object.create(null);\nfunction getLocalPluralFor(v) {\n    let loc = getCurrentLocale();\n    let pluralRules = PLURAL_RULES[loc] || (PLURAL_RULES[loc] = new Intl.PluralRules(loc));\n    let key = pluralRules.select(v);\n    return key === 'other' ? 'h' : key[0];\n}\nexport function __offsetPlural(value, offset, opts) {\n    return opts[value] || opts[getLocalPluralFor(value - offset)] || \"\";\n}\nexport function __plural(value, opts) {\n    return opts[value] || opts[getLocalPluralFor(value)] || \"\";\n}\nexport function __select(value, opts) {\n    return opts[value] || opts['other'] || '';\n}\nexport function __number(value, format) {\n    return formatNumber(getCurrentLocale(), value, typeof format === 'string' ? { format } : format);\n}\nexport function __date(value, format = \"short\") {\n    return formatDate(getCurrentLocale(), value, { format });\n}\nexport function __time(value, format = \"short\") {\n    return formatTime(getCurrentLocale(), value, { format });\n}\n"],
  "mappings": "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",
  "names": ["$dictionary", "locale", "currentLocale", "options", "options", "currentLocale", "options"]
}
